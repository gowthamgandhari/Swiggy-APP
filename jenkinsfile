pipeline {
    agent any

    tools {
        jdk 'jdk17'
        nodejs 'nodejs23'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
        AWS_ACCESS_KEY_ID = credentials('EKS-Access-key')
        AWS_SECRET_ACCESS_KEY = credentials('EKS-Secret-key')
        AWS_DEFAULT_REGION = 'ap-south-1'
        action = "destroy"  // change to 'apply' when needed
    }

    stages {
        stage('Clean Workspace') {
            steps { cleanWs() }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/gowthamgandhari/Swiggy-APP.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=Swiggy \
                        -Dsonar.projectKey=Swiggy
                    '''
                }
            }
        }


        stage('Install Dependencies') {
            steps { sh 'npm install' }
        }

        stage('Terraform EC2 Destroy') {
            steps {
                dir('Tf-Scrpt-Ec2-Eks-Swiggy-App/terraform-EC2-code') {
                    sh 'terraform init'
                    sh 'terraform destroy -auto-approve'
                }
            }
        }

        stage('Terraform EKS Destroy') {
            steps {
                dir('Tf-Scrpt-Ec2-Eks-Swiggy-App/terraform-EKS-Code') {
                    sh 'terraform init'
                    sh 'terraform destroy -auto-approve'
                }
            }
        }

        stage('Manual Approval') {
            steps {
                input(message: 'Approve deployment?', ok: 'Proceed')
            }
        }

        stage('Terraform Apply/Destroy') {
            steps {
                script {
                   dir('Tf-Scrpt-Ec2-Eks-Swiggy-App/terraform-EC2-code') {
                      sh "terraform ${action} --auto-approve"
                    }
                   dir('Tf-Scrpt-Ec2-Eks-Swiggy-App/terraform-EKS-code') {
                      sh "terraform ${action} --auto-approve"
                    }
                }
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs . > trivyfs.txt'
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-creds') {
                        sh '''
                            docker build -t swiggy .
                            docker tag swiggy gowthamcloud268/swiggy:latest
                            docker push gowthamcloud268/swiggy:latest
                        '''
                    }
                }
            }
        }

        stage('Trivy Image Scan') {
            steps {
                sh 'trivy image gowthamcloud268/swiggy:latest > trivy.txt'
            }
        }

        stage('Deploy to EKS') {
            steps {
                dir('k8s') {
                 withAWS(credentials: 'EKS-Access-key', region: 'ap-south-1') {
                    sh '''
                    aws eks update-kubeconfig --region ap-south-1 --name your-eks-cluster-name
                    kubectl apply -f deployment.yml
                    kubectl apply -f service.yml
                    '''
                 }
                }
            }
        }
    } 
}       


